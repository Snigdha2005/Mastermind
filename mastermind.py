# -*- coding: utf-8 -*-
"""Mastermind.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o7Q64of-CqP0bYJhnKeLiZ-Xzxxs_qun
"""

!pip install colorama

'''MASTERMIND GAME IMPLEMENTATION'''

import random
from colorama import Fore, Back, Style
from itertools import combinations
from itertools import permutations

def print_code(code ):
    for i in code:
        match i:
            case "red":
                print(Back.RED + Fore.RED + "REDE", Style.RESET_ALL, end = "   ")
            case "blue":
                print(Back.BLUE + Fore.BLUE + "BLUE", Style.RESET_ALL, end ="   ")
            case "black":
                print(Back.BLACK + Fore.BLACK + "BLAC", Style.RESET_ALL, end = "   ")
            case "yellow":
                print(Back.YELLOW + Fore.YELLOW + "YELL", Style.RESET_ALL, end = "   ")
            case "magenta":
                print(Back.MAGENTA + Fore.MAGENTA + "MAGE", Style.RESET_ALL, end = "   ")
            case "cyan":
                print(Back.CYAN + Fore.CYAN + "CYAN", Style.RESET_ALL, end = "   ")
            case "green":
                print(Back.GREEN + Fore.GREEN + "GREE", Style.RESET_ALL, end = "   ")
            case "white":
                print(Back.WHITE + Fore.WHITE + "WHIT", Style.RESET_ALL, end = "   ")
    print(Style.RESET_ALL)

colors = ["red", "blue", "black", "yellow", "magenta", "cyan", "green", "white"]

code_list = list(permutations(colors, 4))
#print(code_list)
#print(list(map(print_code, code_list)))

colors_dict = {1 : "red", 2 : "blue", 3 : "black", 4 : "yellow", 5 : "magenta", 6 : "cyan", 7 : "green", 8 : "white"}

def generate_code() -> list[str]:
    return list(random.choice(code_list))

def red_flag(guess_code : list[str], secret_code : list[str]) -> int:
    return len([True for i in range(4) if guess_code[i] == secret_code[i]])

def white_flag(guess_code : list[str], secret_code : list[str]) -> int:
    return len([True for i in range(4) if guess_code[i] in secret_code and i != secret_code.index(guess_code[i])])

def win_condition(reds : int) -> bool:
    return reds == 4

def player_input() -> list[str]:
    print("ENTER INPUT")
    print(Style.RESET_ALL + "1 :", Back.RED + Fore.RED + "REDe")
    print(Style.RESET_ALL + "2 :", Back.BLUE + Fore.BLUE + "BLUE")
    print(Style.RESET_ALL + "3 :", Back.BLACK + Fore.BLACK + "BLAC")
    print(Style.RESET_ALL + "4 :", Back.YELLOW + Fore.YELLOW + "YELL")
    print(Style.RESET_ALL + "5 :", Back.MAGENTA + Fore.MAGENTA + "MAGE")
    print(Style.RESET_ALL + "6 :", Back.CYAN + Fore.CYAN + "CYAN")
    print(Style.RESET_ALL + "7 :", Back.GREEN + Fore.GREEN + "GREE")
    print(Style.RESET_ALL + "8 :", Back.WHITE + Fore.WHITE + "WHIT")
    print(Style.RESET_ALL)
    code = list(input())
    return [colors_dict[int(_)] for _ in code]

def red_search(reds : int, guess_code : list[str], code_list : list[tuple[str]]) -> list[tuple[str]]:
    return [_ for _ in code_list if red_flag(guess_code, list(_)) == reds]

def white_search(whites : int, guess_code : list[str], code_list : list[tuple[str]]) -> list[tuple[str]]:
    return [_ for _ in code_list if white_flag(guess_code, list(_)) == whites]

def reduce_search_space(reds : int, whites : int, guess_code : list[str], code_list : list[tuple[str]]) -> list[tuple[str]]:
    code_list = red_search(reds, guess_code, code_list)
    #print(list(map(print_code, code_list)))
    code_list = white_search(whites, guess_code, code_list)
    #print(list(map(print_code, code_list)))
    return code_list


def main_game() -> str:
    print("PRESS 1 : COMPUTER TURN TO GUESS")
    print("PRESS 2 : PLAYER TURN TO GUESS")
    n = int(input())
    print()
    if n == 1:
        code_list = list(permutations(colors, 4))
        for i in range(10):
            print("ATTEMPT :", i + 1)
            guess_code = list(random.choice(code_list))
            print_code(guess_code)
            print("REDS : ", end = "")
            reds = int(input())
            if win_condition(reds):
                return "WIN"
            print("WHITES : ", end = "")
            whites = int(input())
            print()
            print()
            code_list = reduce_search_space(reds, whites, guess_code, code_list)
        print_code(player_input())
        return "LOSE"
    elif n == 2:
        secret_code = generate_code()
        for i in range(10):
            print("ATTEMPT :", i + 1)
            guess_code = player_input()
            print_code(guess_code)
            reds = red_flag(guess_code, secret_code)
            if win_condition(reds):
                return "WIN"
            whites = white_flag(guess_code, secret_code)
            print("RED :", reds)
            print("WHITE :", whites)
            print()
            print()
        print_code(secret_code)
        return "LOSE"
    else:
        print("Invalid input")

main_game()